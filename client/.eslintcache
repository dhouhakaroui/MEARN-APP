[{"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\store.js":"3","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\index.js":"4","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Home.js":"5","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Login.js":"6","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Profile.js":"7","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Register.js":"8","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Navbar.js":"9","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\authReducer.js":"10","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\types.js":"11","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\authActions.js":"12","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\PrivateRoute.js":"13","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\setToken.js":"14","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Spinner.js":"15","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\test.js":"16","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Posts.js":"17","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Users.js":"18","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\postReducer.js":"19","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\postActions.js":"20","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\newPost.js":"21"},{"size":346,"mtime":1608504613147,"results":"22","hashOfConfig":"23"},{"size":1068,"mtime":1608744327225,"results":"24","hashOfConfig":"23"},{"size":281,"mtime":1607983378612,"results":"25","hashOfConfig":"23"},{"size":188,"mtime":1608747394474,"results":"26","hashOfConfig":"23"},{"size":1707,"mtime":1608504613121,"results":"27","hashOfConfig":"23"},{"size":1918,"mtime":1608504613126,"results":"28","hashOfConfig":"23"},{"size":1907,"mtime":1608753725853,"results":"29","hashOfConfig":"23"},{"size":2744,"mtime":1608504613138,"results":"30","hashOfConfig":"23"},{"size":3093,"mtime":1608744276989,"results":"31","hashOfConfig":"23"},{"size":1227,"mtime":1608406487572,"results":"32","hashOfConfig":"23"},{"size":510,"mtime":1608747290945,"results":"33","hashOfConfig":"23"},{"size":1198,"mtime":1608406487260,"results":"34","hashOfConfig":"23"},{"size":429,"mtime":1608741449883,"results":"35","hashOfConfig":"23"},{"size":276,"mtime":1608406487582,"results":"36","hashOfConfig":"23"},{"size":283,"mtime":1608754278453,"results":"37","hashOfConfig":"23"},{"size":0,"mtime":1608419381256,"results":"38","hashOfConfig":"23"},{"size":485,"mtime":1608755121867,"results":"39","hashOfConfig":"23"},{"size":185,"mtime":1608754254726,"results":"40","hashOfConfig":"23"},{"size":897,"mtime":1608748078930,"results":"41","hashOfConfig":"23"},{"size":2193,"mtime":1608747318927,"results":"42","hashOfConfig":"23"},{"size":668,"mtime":1608754785428,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"15ncnke",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\index.js",[],["94","95"],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\store.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\index.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Home.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Login.js",["96"],"import {React ,useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {loginUser} from '../actions/authActions'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nfunction Login({history}) {\r\n    const [info,setInfo]= useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n    const handleChange=(e)=>{setInfo({...info,[e.target.name]:e.target.value})}\r\n    const [errors, setErrors] = useState(null)\r\n    const dispatch=useDispatch()\r\n    const login=e=>{\r\n        e.preventDefault()\r\n        dispatch(loginUser(info))\r\n    }\r\n    const auth=useSelector(state=>state.authReducer)\r\n    useEffect(() => {\r\n        if (auth.isAuth){ history.push('/profile')}\r\n        if (auth.errors){ setErrors(auth.errors)}\r\n    }, [auth.isAuth,auth.errors])\r\n    return (\r\n        <div className=\"login\">\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\">\r\n                    <form onSubmit={login}>\r\n                        <p className=\"h5 text-center mb-4\">Sign in</p>\r\n                        <div className=\"grey-text\">\r\n                        <MDBInput label=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n                            success=\"right\"  name='email' onChange={handleChange} onFocus={()=>setErrors(null)}/>\r\n                        <MDBInput label=\"Type your password\" icon=\"lock\" group type=\"password\" name='password' onChange={handleChange} validate />\r\n                        </div>\r\n                        {errors && errors.map(el=><p>{el.msg}</p>)}\r\n                        <div className=\"text-center\">\r\n                        <MDBBtn type='submit'>Login</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Profile.js",["97","98"],"import {React ,useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {loadUser} from '../actions/authActions'\r\nimport SpinnerPage from './Spinner'\r\nimport {Card,Container,Row ,Col,Image,ListGroup,ListGroupItem} from 'react-bootstrap'\r\nimport NewPost from './newPost'\r\nfunction Profile() {\r\n    const dispatch=useDispatch()\r\n    const auth=useSelector(state=>state.authReducer)\r\n    useEffect(() => {dispatch(loadUser())}, [])\r\n    return (\r\n        <div>\r\n            {!auth?\r\n            <SpinnerPage/>:\r\n        <div>{auth.user&& \r\n            <div>\r\n                <Card  style={{ width: '30rem' }}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={6} md={4}>\r\n                            <Image src=\"avatar.jpg\" style={{width:180}}  roundedCircle />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Card.Body>\r\n                    <Card.Title>{auth.user.firstName +' ' +auth.user.lastName}</Card.Title>\r\n                    <Card.Text>\r\n                        hi, i'm a user....\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem>age : {auth.user.age}</ListGroupItem>\r\n                        <ListGroupItem>email :{auth.user.email}</ListGroupItem>\r\n                    </ListGroup>\r\n                    <Card.Body>\r\n                        <Card.Link href=\"#\">Edit Profile</Card.Link>\r\n                        <Card.Link href=\"#\">New Post</Card.Link>\r\n                    </Card.Body>\r\n                </Card>  \r\n                <div>\r\n                   <NewPost user={auth.user}/> \r\n                </div>              \r\n            </div>\r\n        }</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Register.js",["99"],"import {React ,useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {registerUser} from '../actions/authActions'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport {Form} from 'react-bootstrap'\r\nfunction Register({history}) {\r\n    const [Info,setInfo]= useState({\r\n        firstName:'',\r\n        lastName:'',\r\n        age:0,\r\n        gender:'male',\r\n        email:'',\r\n        password:''\r\n    })        \r\n    const handleChange=(e)=>{setInfo({...Info,[e.target.name]:e.target.value})}\r\n    const dispatch=useDispatch()\r\n    const auth=useSelector(state=>state.authReducer)\r\n    const [errors, setErrors] = useState(null)\r\n    useEffect(() => {\r\n        if (auth.isAuth){history.push('/profile')}\r\n        if (auth.errors){setErrors(auth.errors)}\r\n    }, [auth.isAuth,auth.errors])\r\n    const registerNow=e=>{\r\n        e.preventDefault()\r\n        dispatch(registerUser(Info))\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\">\r\n                    <form onSubmit={registerNow} onFocus={()=>setErrors(null)}>\r\n                        <div className=\"grey-text\">\r\n                        <MDBInput label=\"Your first name\" icon=\"user\" group type=\"text\" name='firstName' onChange={handleChange} validate error=\"wrong\" success=\"right\" />\r\n                        <MDBInput label=\"Your last name\" icon=\"user\" group type=\"text\" name='lastName' onChange={handleChange} validate error=\"wrong\" success=\"right\" />\r\n                        <Form.Control as=\"select\" name='gender' onChange={handleChange}>\r\n                            <option value='male'>man</option>\r\n                            <option value='female'>women</option>\r\n                        </Form.Control>\r\n                        <MDBInput label=\"Your age\" icon=\"calendar\" group type=\"text\" name='age' onChange={handleChange} validate error=\"wrong\" success=\"right\" />\r\n                        <MDBInput label=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\"  name='email' onChange={handleChange} />\r\n                        <MDBInput label=\"Type your password\" icon=\"lock\" group type=\"password\" name='password' onChange={handleChange} validate />\r\n                        </div>\r\n                        {errors && errors.map(el=><p>{el.msg}</p>)}\r\n                        <div className=\"text-center\">\r\n                        <MDBBtn type='submit'>Register</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                </MDBContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Navbar.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\types.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\authActions.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\PrivateRoute.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\setToken.js",[],["100","101"],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Spinner.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\test.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Posts.js",["102","103"],"import {React , useState }from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Spinner from './Spinner'\r\n\r\n\r\nfunction Posts() {\r\n    const posts=useSelector(state=>state.postReducer.posts)\r\n    return (\r\n        <div className=\"App\">\r\n            {posts?\r\n            posts.map(el=>\r\n            <div>\r\n            <h1>{el.name}</h1> \r\n            <p>{el.text}</p>\r\n            </div>) :<Spinner/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Users.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\postReducer.js",["104"],"import {ADD_POST,GET_POSTS,GET_POST,DELETE_POST,GET_ERRORS} from '../actions/types'\r\nconst initialState = {\r\n    posts: [],\r\n    post: {},\r\n    errors:null\r\n}\r\n\r\nexport default (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state, posts: [action.payload,...state.posts]\r\n            }   \r\n        case GET_POSTS:\r\n        return {\r\n            ...state,\r\n            posts: action.payload\r\n        }\r\n        case GET_POST:\r\n        return {\r\n            ...state,\r\n            post: action.payload\r\n        }\r\n        case DELETE_POST:\r\n        return {\r\n            ...state,\r\n            posts: state.posts.filter(post => post._id !== action.payload )\r\n        }\r\n        case GET_ERRORS: \r\n        return {...state ,\r\n            errors:action.payload};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\postActions.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\newPost.js",["105"],"import {React , useState }from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { addPost } from '../actions/postActions'\r\nfunction NewPost(props) {\r\n    const [post, setpost] = useState({\r\n        user:props.user._id,\r\n        name:props.user.firstName,\r\n        text:\"\",\r\n        comments:[]\r\n    })\r\n    const dispatch=useDispatch()\r\n    const handleChange=(e)=>{setpost({...post,text:e.target.value})}\r\n    return (\r\n        <div>          \r\n            <textarea type=\"text\" onChange={handleChange}/>\r\n            <button onClick={()=>{dispatch(addPost(post))}}>submit</button>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPost\r\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":21,"column":8,"nodeType":"112","endLine":21,"endColumn":33,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":24},{"ruleId":"110","severity":1,"message":"118","line":10,"column":45,"nodeType":"112","endLine":10,"endColumn":47,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"111","line":22,"column":8,"nodeType":"112","endLine":22,"endColumn":33,"suggestions":"120"},{"ruleId":"106","replacedBy":"121"},{"ruleId":"108","replacedBy":"122"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"123","line":2,"column":9,"nodeType":"116","messageId":"117","endLine":2,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":8,"column":1,"nodeType":"126","endLine":35,"endColumn":2},{"ruleId":"114","severity":1,"message":"127","line":2,"column":21,"nodeType":"116","messageId":"117","endLine":2,"endColumn":32},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["130"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["131"],["132"],["128"],["129"],"'useDispatch' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"133","fix":"137"},"Update the dependencies array to be: [auth.isAuth, auth.errors, history]",{"range":"138","text":"139"},"Update the dependencies array to be: [dispatch]",{"range":"140","text":"141"},{"range":"142","text":"139"},[786,811],"[auth.isAuth, auth.errors, history]",[462,464],"[dispatch]",[829,854]]