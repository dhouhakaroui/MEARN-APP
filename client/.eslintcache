[{"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\store.js":"3","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\index.js":"4","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Home.js":"5","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Login.js":"6","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Profile.js":"7","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Register.js":"8","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Navbar.js":"9","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\authReducer.js":"10","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\types.js":"11","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\authActions.js":"12","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\PrivateRoute.js":"13","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\setToken.js":"14"},{"size":285,"mtime":1607983936220,"results":"15","hashOfConfig":"16"},{"size":871,"mtime":1608393562843,"results":"17","hashOfConfig":"16"},{"size":281,"mtime":1607983378612,"results":"18","hashOfConfig":"16"},{"size":137,"mtime":1608328855204,"results":"19","hashOfConfig":"16"},{"size":1875,"mtime":1608400652713,"results":"20","hashOfConfig":"16"},{"size":1984,"mtime":1608399184268,"results":"21","hashOfConfig":"16"},{"size":483,"mtime":1608404139938,"results":"22","hashOfConfig":"16"},{"size":3212,"mtime":1608403827331,"results":"23","hashOfConfig":"16"},{"size":2449,"mtime":1608397094728,"results":"24","hashOfConfig":"16"},{"size":1227,"mtime":1608342332886,"results":"25","hashOfConfig":"16"},{"size":308,"mtime":1608341111835,"results":"26","hashOfConfig":"16"},{"size":1198,"mtime":1608342415883,"results":"27","hashOfConfig":"16"},{"size":430,"mtime":1608333372011,"results":"28","hashOfConfig":"16"},{"size":276,"mtime":1608336924455,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15ncnke",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\index.js",[],["62","63"],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\store.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\index.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Home.js",["64","65"],"import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBMask, MDBIcon, MDBView, MDBBtn } from \"mdbreact\";\r\n\r\nconst BlogPage = () => {\r\n  return (\r\n    <MDBCard className=\"my-5 px-5 pb-5\">\r\n      <MDBCardBody>\r\n        <MDBRow>\r\n          <MDBCol md=\"12\">\r\n            <MDBCard reverse>\r\n              <MDBView hover cascade waves>\r\n                <img\r\n                  src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(142).jpg\"\r\n                  alt=\"\"\r\n                  className=\"img-fluid\"\r\n                />\r\n                <MDBMask overlay=\"white-slight\" className=\"waves-light\" />\r\n              </MDBView>\r\n              <MDBCardBody cascade className=\"text-center\">\r\n                <h2 className=\"font-weight-bold\">\r\n                  <a href=\"#!\"> WELCOME </a>\r\n                </h2>\r\n                <p>\r\n                  Written by\r\n                  <a href=\"#!\">\r\n                    <strong> GO MY CODE Students</strong>\r\n                  </a>\r\n                  , 19/12/2020\r\n                </p>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n            <MDBContainer className=\"mt-5\">\r\n              <p>\r\n              Blogs are a special type of website that can be presented as a kind of private diary published on the Web, and accessible to Internet users around the world. This is a simplified version of a website, offered turnkey to Internet users, and technically managed by a publisher.\r\n              </p>\r\n              <p>\r\n              Concretely, the blog therefore allows certain Internet users, bloggers, to share their opinions, comments, moods, points of view on the news, by writing articles, posting photos, etc.\r\n              </p>\r\n            </MDBContainer>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n  );\r\n}\r\n\r\nexport default BlogPage;\r\n","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Login.js",["66"],"import {React ,useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {loginUser} from '../actions/authActions'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nfunction Login({history}) {\r\n    const [info,setInfo]= useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n    const handleChange=(e)=>{\r\n        setInfo({...info,[e.target.name]:e.target.value})\r\n    }\r\n    const [errors, setErrors] = useState(null)\r\n    const dispatch=useDispatch()\r\n    const login=e=>{\r\n        e.preventDefault()\r\n        dispatch(loginUser(info))\r\n    }\r\n    const auth=useSelector(state=>state.authReducer)\r\n    useEffect(() => {\r\n        if (auth.isAuth){\r\n            history.push('/profile')\r\n        }\r\n        if (auth.errors){\r\n            setErrors(auth.errors)\r\n        }\r\n    }, [auth.isAuth,auth.errors])\r\n    return (\r\n        <div className=\"login\">\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\">\r\n                    <form onSubmit={login}>\r\n                        <p className=\"h5 text-center mb-4\">Sign in</p>\r\n                        <div className=\"grey-text\">\r\n                        <MDBInput label=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n                            success=\"right\"  name='email' onChange={handleChange} onFocus={()=>setErrors(null)}/>\r\n                        <MDBInput label=\"Type your password\" icon=\"lock\" group type=\"password\" name='password' onChange={handleChange} validate />\r\n                        </div>\r\n                        {errors && errors.map(el=><p>{el.msg}</p>)}\r\n                        <div className=\"text-center\">\r\n                        <MDBBtn type='submit'>Login</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                </MDBContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Profile.js",["67","68"],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Register.js",["69","70","71","72"],"import {React ,useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {registerUser} from '../actions/authActions'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { MDBSelect } from \"mdbreact\";\r\nfunction Register({history}) {\r\n    const [Info,setInfo]= useState({\r\n        firstName:'',\r\n        lastName:'',\r\n        age:0,\r\n        gender:'',\r\n        email:'',\r\n        password:''\r\n    })\r\n    const [options, setoptions] = useState([\r\n        {\r\n          text: \"Man\",\r\n          value: \"male\"\r\n        },\r\n        {\r\n          text: \"Women\",\r\n          value: \"female\"\r\n        }])\r\n        \r\n    const handleChange=(e)=>{setInfo({...Info,[e.target.name]:e.target.value})}\r\n    const dispatch=useDispatch()\r\n    const auth=useSelector(state=>state.authReducer)\r\n    const [errors, setErrors] = useState(null)\r\n    useEffect(() => {\r\n        if (auth.isAuth){\r\n            history.push('/profile')\r\n        }\r\n        if (auth.errors){\r\n            setErrors(auth.errors)\r\n        }\r\n    }, [auth.isAuth,auth.errors])\r\n\r\n    const registerNow=e=>{\r\n        e.preventDefault()\r\n        dispatch(registerUser(Info))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\">\r\n                    <form onSubmit={registerNow} onFocus={()=>setErrors(null)}>\r\n                        <p className=\"h5 text-center mb-4\">Sign in</p>\r\n                        <div className=\"grey-text\">\r\n                        <MDBInput label=\"Your first name\" icon=\"user\" group type=\"text\" name='firstName' onChange={handleChange} validate error=\"wrong\" success=\"right\" />\r\n                        <MDBInput label=\"Your last name\" icon=\"user\" group type=\"text\" name='lastName' onChange={handleChange} validate error=\"wrong\" success=\"right\" />\r\n                        {/* <select name='gender' onChange={handleChange}>\r\n                            <option value='male'>man</option>\r\n                            <option value='female'>women</option>\r\n                        </select> */}\r\n                        {/* <MDBSelect options={options} onChange={ setInfo({...Info,gender:setoptions}) } selected=\"Choose your option\" label=\"Example label\"/> */}\r\n                        <MDBInput label=\"Your age\" icon=\"calendar\" group type=\"text\" name='age' onChange={handleChange} validate error=\"wrong\" success=\"right\" />\r\n                        <MDBInput label=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\"  name='email' onChange={handleChange} />\r\n                        <MDBInput label=\"Type your password\" icon=\"lock\" group type=\"password\" name='password' onChange={handleChange} validate />\r\n                        </div>\r\n                        {errors && errors.map(el=><p>{el.msg}</p>)}\r\n                        <div className=\"text-center\">\r\n                        <MDBBtn type='submit'>Register</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                </MDBContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\component\\Navbar.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\types.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\actions\\authActions.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\PrivateRoute.js",[],"C:\\Users\\ASUS\\Desktop\\MERN app\\client\\src\\setToken.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":71,"nodeType":"79","messageId":"80","endLine":2,"endColumn":78},{"ruleId":"77","severity":1,"message":"81","line":2,"column":89,"nodeType":"79","messageId":"80","endLine":2,"endColumn":95},{"ruleId":"82","severity":1,"message":"83","line":27,"column":8,"nodeType":"84","endLine":27,"endColumn":33,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"86","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},{"ruleId":"82","severity":1,"message":"87","line":8,"column":45,"nodeType":"84","endLine":8,"endColumn":47,"suggestions":"88"},{"ruleId":"77","severity":1,"message":"89","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":19},{"ruleId":"77","severity":1,"message":"90","line":15,"column":12,"nodeType":"79","messageId":"80","endLine":15,"endColumn":19},{"ruleId":"77","severity":1,"message":"91","line":15,"column":21,"nodeType":"79","messageId":"80","endLine":15,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":36,"column":8,"nodeType":"84","endLine":36,"endColumn":33,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'MDBIcon' is defined but never used.","Identifier","unusedVar","'MDBBtn' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["96"],"'MDBSelect' is defined but never used.","'options' is assigned a value but never used.","'setoptions' is assigned a value but never used.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"98","fix":"102"},"Update the dependencies array to be: [auth.isAuth, auth.errors, history]",{"range":"103","text":"104"},"Update the dependencies array to be: [dispatch]",{"range":"105","text":"106"},{"range":"107","text":"104"},[848,873],"[auth.isAuth, auth.errors, history]",[307,309],"[dispatch]",[1071,1096]]